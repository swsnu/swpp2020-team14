# Generated by Django 3.1.2 on 2020-10-31 10:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('last_edited_at', models.DateTimeField()),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('image_file', models.FileField(upload_to='')),
                ('view_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Font',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_free', models.BooleanField()),
                ('license_summary', models.TextField()),
                ('license_detail', models.JSONField()),
                ('manufacturer', models.CharField(max_length=100)),
                ('view_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FontopiaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('image_file', models.FileField(upload_to='')),
                ('is_analyzed', models.BooleanField()),
                ('analyzed_at', models.DateTimeField()),
                ('memo', models.TextField()),
                ('metadata', models.JSONField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_photos', to='fontopia.fontopiauser')),
                ('selected_font', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fontopia.font')),
            ],
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.FloatField()),
                ('font', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fontopia.font')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='fontopia.photo')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('last_edited_at', models.DateTimeField()),
                ('contents', models.TextField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='fontopia.article')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_comments', to='fontopia.fontopiauser')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_articles', to='fontopia.fontopiauser'),
        ),
        migrations.AddField(
            model_name='article',
            name='liked_users',
            field=models.ManyToManyField(related_name='liked_articles', to='fontopia.FontopiaUser'),
        ),
    ]
